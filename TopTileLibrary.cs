// Decompiled with JetBrains decompiler
// Type: TopTileLibrary
// Assembly: Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: EAF20368-35E7-4BB6-B082-5477D61019A6
// Assembly location: C:\Users\Takko\Downloads\Worldbox .NET\Assembly-CSharp.dll

using UnityEngine;

#nullable disable
public class TopTileLibrary : TileLibraryMain<TopTileType>
{
  public static TopTileType snow_sand;
  public static TopTileType permafrost_low;
  public static TopTileType permafrost_high;
  public static TopTileType frozen_low;
  public static TopTileType frozen_high;
  public static TopTileType snow_hills;
  public static TopTileType snow_block;
  public static TopTileType snow_summit;
  public static TopTileType ice;
  public static TopTileType landmine;
  public static TopTileType water_bomb;
  public static TopTileType tnt_timed;
  public static TopTileType tnt;
  public static TopTileType fireworks;
  public static TopTileType road;
  public static TopTileType field;
  public static TopTileType fuse;
  public static TopTileType wall_evil;
  public static TopTileType wall_order;
  public static TopTileType wall_ancient;
  public static TopTileType wall_wild;
  public static TopTileType wall_green;
  public static TopTileType wall_iron;
  public static TopTileType wall_light;
  public static TopTileType tumor_low;
  public static TopTileType tumor_high;
  public static TopTileType biomass_low;
  public static TopTileType biomass_high;
  public static TopTileType pumpkin_low;
  public static TopTileType pumpkin_high;
  public static TopTileType cybertile_low;
  public static TopTileType cybertile_high;
  public static TopTileType grass_low;
  public static TopTileType grass_high;
  public static TopTileType corruption_low;
  public static TopTileType corruption_high;
  public static TopTileType enchanted_low;
  public static TopTileType enchanted_high;
  public static TopTileType mushroom_low;
  public static TopTileType mushroom_high;
  public static TopTileType savanna_low;
  public static TopTileType savanna_high;
  public static TopTileType jungle_low;
  public static TopTileType jungle_high;
  public static TopTileType infernal_low;
  public static TopTileType infernal_high;
  public static TopTileType swamp_low;
  public static TopTileType swamp_high;
  public static TopTileType wasteland_low;
  public static TopTileType wasteland_high;
  public static TopTileType desert_low;
  public static TopTileType desert_high;
  public static TopTileType lemon_low;
  public static TopTileType lemon_high;
  public static TopTileType candy_low;
  public static TopTileType candy_high;
  public static TopTileType crystal_low;
  public static TopTileType crystal_high;
  public static TopTileType birch_low;
  public static TopTileType birch_high;
  public static TopTileType maple_low;
  public static TopTileType maple_high;
  public static TopTileType rocklands_low;
  public static TopTileType rocklands_high;
  public static TopTileType garlic_low;
  public static TopTileType garlic_high;
  public static TopTileType flower_low;
  public static TopTileType flower_high;
  public static TopTileType celestial_low;
  public static TopTileType celestial_high;
  public static TopTileType singularity_low;
  public static TopTileType singularity_high;
  public static TopTileType clover_low;
  public static TopTileType clover_high;
  public static TopTileType paradox_low;
  public static TopTileType paradox_high;
  private const string TEMPLATE_WALL = "$wall$";

  public override void init()
  {
    base.init();
    TopTileType pAsset1 = new TopTileType();
    pAsset1.drawPixel = true;
    pAsset1.biome_build_check = true;
    pAsset1.id = "grass_low";
    pAsset1.color_hex = "#7EAF46";
    pAsset1.height_min = 108;
    pAsset1.grass = true;
    pAsset1.nutrition = 30;
    pAsset1.ground = true;
    pAsset1.can_be_farm = true;
    pAsset1.can_build_on = true;
    pAsset1.can_be_set_on_fire = true;
    pAsset1.burnable = true;
    pAsset1.burn_rate = 5;
    pAsset1.strength = 0;
    pAsset1.fire_chance = 0.05f;
    pAsset1.remove_on_freeze = true;
    pAsset1.remove_on_heat = true;
    pAsset1.can_be_biome = true;
    pAsset1.food_resource = "herbs";
    TopTileLibrary.grass_low = this.add(pAsset1);
    this.t.can_be_removed_with_spade = true;
    this.t.setBiome("biome_grass");
    this.t.setDrawLayer(TileZIndexes.grass_low);
    this.t.biome_tags = AssetLibrary<TopTileType>.h<BiomeTag>(new BiomeTag[1]);
    TopTileType pAsset2 = new TopTileType();
    pAsset2.cost = 120;
    pAsset2.biome_build_check = true;
    pAsset2.drawPixel = true;
    pAsset2.id = "grass_high";
    pAsset2.color_hex = "#5F833C";
    pAsset2.height_min = 128 /*0x80*/;
    pAsset2.grass = true;
    pAsset2.nutrition = 30;
    pAsset2.can_be_set_on_fire = true;
    pAsset2.burnable = true;
    pAsset2.burn_rate = 5;
    pAsset2.additional_height = new int[8]
    {
      15,
      16 /*0x10*/,
      17,
      14,
      13,
      12,
      11,
      10
    };
    pAsset2.ground = true;
    pAsset2.can_build_on = true;
    pAsset2.can_be_farm = true;
    pAsset2.fire_chance = 0.06f;
    pAsset2.strength = 0;
    pAsset2.remove_on_freeze = true;
    pAsset2.remove_on_heat = true;
    pAsset2.can_be_biome = true;
    pAsset2.food_resource = "herbs";
    TopTileLibrary.grass_high = this.add(pAsset2);
    this.t.can_be_removed_with_spade = true;
    this.t.setBiome("biome_grass");
    this.t.used_in_generator = true;
    this.t.setDrawLayer(TileZIndexes.grass_high);
    this.t.biome_tags = AssetLibrary<TopTileType>.h<BiomeTag>(new BiomeTag[1]);
    TopTileLibrary.savanna_low = this.clone("savanna_low", "grass_low");
    this.t.color_hex = "#F0B121";
    this.t.setBiome("biome_savanna");
    this.t.setDrawLayer(TileZIndexes.savanna_low);
    this.t.fire_chance = 0.06f;
    this.t.burn_rate = 5;
    this.t.food_resource = "wheat";
    this.t.biome_tags = AssetLibrary<TopTileType>.h<BiomeTag>(BiomeTag.Savanna);
    TopTileLibrary.savanna_high = this.clone("savanna_high", "grass_high");
    this.t.color_hex = "#CF931B";
    this.t.setBiome("biome_savanna");
    this.t.setDrawLayer(TileZIndexes.savanna_high);
    this.t.fire_chance = 0.06f;
    this.t.burn_rate = 5;
    this.t.food_resource = "wheat";
    this.t.biome_tags = AssetLibrary<TopTileType>.h<BiomeTag>(BiomeTag.Savanna);
    TopTileLibrary.enchanted_low = this.clone("enchanted_low", "grass_low");
    this.t.color_hex = "#8CDC6A";
    this.t.setBiome("biome_enchanted");
    this.t.setDrawLayer(TileZIndexes.enchanted_low);
    this.t.step_action = new TileStepAction(ActionLibrary.giveEnchanted);
    this.t.fire_chance = 0.03f;
    this.t.burn_rate = 4;
    this.t.food_resource = "herbs";
    this.t.biome_tags = AssetLibrary<TopTileType>.h<BiomeTag>(BiomeTag.Enchanted);
    TopTileLibrary.enchanted_high = this.clone("enchanted_high", "grass_low");
    this.t.color_hex = "#76B153";
    this.t.setBiome("biome_enchanted");
    this.t.setDrawLayer(TileZIndexes.enchanted_high);
    this.t.step_action = new TileStepAction(ActionLibrary.giveEnchanted);
    this.t.fire_chance = 0.04f;
    this.t.burn_rate = 4;
    this.t.food_resource = "herbs";
    this.t.biome_tags = AssetLibrary<TopTileType>.h<BiomeTag>(BiomeTag.Enchanted);
    TopTileLibrary.mushroom_low = this.clone("mushroom_low", "grass_low");
    this.t.color_hex = "#677642";
    this.t.setBiome("biome_mushroom");
    this.t.setDrawLayer(TileZIndexes.mushroom_low);
    this.t.fire_chance = 0.03f;
    this.t.burn_rate = 4;
    this.t.food_resource = "mushrooms";
    this.t.biome_tags = AssetLibrary<TopTileType>.h<BiomeTag>(BiomeTag.Mushroom);
    TopTileLibrary.mushroom_high = this.clone("mushroom_high", "grass_high");
    this.t.color_hex = "#556338";
    this.t.setBiome("biome_mushroom");
    this.t.setDrawLayer(TileZIndexes.mushroom_high);
    this.t.fire_chance = 0.03f;
    this.t.burn_rate = 4;
    this.t.food_resource = "mushrooms";
    this.t.biome_tags = AssetLibrary<TopTileType>.h<BiomeTag>(BiomeTag.Mushroom);
    TopTileLibrary.birch_low = this.clone("birch_low", "grass_low");
    this.t.color_hex = "#93CF3A";
    this.t.setBiome("biome_birch");
    this.t.setDrawLayer(TileZIndexes.birch_low);
    this.t.fire_chance = 0.03f;
    this.t.burn_rate = 4;
    this.t.food_resource = "herbs";
    this.t.biome_tags = AssetLibrary<TopTileType>.h<BiomeTag>(BiomeTag.Birch);
    TopTileLibrary.birch_high = this.clone("birch_high", "grass_high");
    this.t.color_hex = "#76AC2B";
    this.t.setBiome("biome_birch");
    this.t.setDrawLayer(TileZIndexes.birch_high);
    this.t.fire_chance = 0.03f;
    this.t.burn_rate = 4;
    this.t.food_resource = "herbs";
    this.t.biome_tags = AssetLibrary<TopTileType>.h<BiomeTag>(BiomeTag.Birch);
    TopTileLibrary.maple_low = this.clone("maple_low", "grass_low");
    this.t.color_hex = "#B57F22";
    this.t.setBiome("biome_maple");
    this.t.setDrawLayer(TileZIndexes.maple_low);
    this.t.fire_chance = 0.03f;
    this.t.burn_rate = 4;
    this.t.food_resource = "herbs";
    this.t.biome_tags = AssetLibrary<TopTileType>.h<BiomeTag>(BiomeTag.Maple);
    TopTileLibrary.maple_high = this.clone("maple_high", "grass_high");
    this.t.color_hex = "#A75924";
    this.t.setBiome("biome_maple");
    this.t.setDrawLayer(TileZIndexes.maple_high);
    this.t.fire_chance = 0.03f;
    this.t.burn_rate = 4;
    this.t.food_resource = "herbs";
    this.t.biome_tags = AssetLibrary<TopTileType>.h<BiomeTag>(BiomeTag.Maple);
    TopTileLibrary.rocklands_low = this.clone("rocklands_low", "grass_low");
    this.t.color_hex = "#8D8D8D";
    this.t.setBiome("biome_rocklands");
    this.t.setDrawLayer(TileZIndexes.rocklands_low);
    this.t.fire_chance = 0.03f;
    this.t.burn_rate = 3;
    this.t.food_resource = "herbs";
    this.t.biome_tags = AssetLibrary<TopTileType>.h<BiomeTag>(BiomeTag.Rocklands);
    TopTileLibrary.rocklands_high = this.clone("rocklands_high", "grass_high");
    this.t.color_hex = "#7A7A7A";
    this.t.setBiome("biome_rocklands");
    this.t.setDrawLayer(TileZIndexes.rocklands_high);
    this.t.fire_chance = 0.03f;
    this.t.burn_rate = 3;
    this.t.food_resource = "herbs";
    this.t.biome_tags = AssetLibrary<TopTileType>.h<BiomeTag>(BiomeTag.Rocklands);
    TopTileLibrary.garlic_low = this.clone("garlic_low", "grass_low");
    this.t.color_hex = "#ACA979";
    this.t.setBiome("biome_garlic");
    this.t.setDrawLayer(TileZIndexes.garlic_low);
    this.t.fire_chance = 0.03f;
    this.t.burn_rate = 5;
    this.t.food_resource = "herbs";
    this.t.biome_tags = AssetLibrary<TopTileType>.h<BiomeTag>(BiomeTag.Garlic);
    TopTileLibrary.garlic_high = this.clone("garlic_high", "grass_high");
    this.t.color_hex = "#8C8E65";
    this.t.setBiome("biome_garlic");
    this.t.setDrawLayer(TileZIndexes.garlic_high);
    this.t.fire_chance = 0.03f;
    this.t.burn_rate = 5;
    this.t.food_resource = "herbs";
    this.t.biome_tags = AssetLibrary<TopTileType>.h<BiomeTag>(BiomeTag.Garlic);
    TopTileLibrary.flower_low = this.clone("flower_low", "grass_low");
    this.t.color_hex = "#54CC3A";
    this.t.setBiome("biome_flower");
    this.t.setDrawLayer(TileZIndexes.flower_low);
    this.t.fire_chance = 0.03f;
    this.t.burn_rate = 5;
    this.t.food_resource = "herbs";
    this.t.biome_tags = AssetLibrary<TopTileType>.h<BiomeTag>(BiomeTag.Flower);
    TopTileLibrary.flower_high = this.clone("flower_high", "grass_high");
    this.t.color_hex = "#39A334";
    this.t.setBiome("biome_flower");
    this.t.setDrawLayer(TileZIndexes.flower_high);
    this.t.fire_chance = 0.03f;
    this.t.burn_rate = 4;
    this.t.food_resource = "herbs";
    this.t.biome_tags = AssetLibrary<TopTileType>.h<BiomeTag>(BiomeTag.Flower);
    TopTileLibrary.celestial_low = this.clone("celestial_low", "grass_low");
    this.t.color_hex = "#B573DA";
    this.t.setBiome("biome_celestial");
    this.t.setDrawLayer(TileZIndexes.celestial_low);
    this.t.fire_chance = 0.03f;
    this.t.burn_rate = 2;
    this.t.food_resource = "herbs";
    this.t.biome_tags = AssetLibrary<TopTileType>.h<BiomeTag>(BiomeTag.Celestial);
    TopTileLibrary.celestial_high = this.clone("celestial_high", "grass_high");
    this.t.color_hex = "#7F5DA2";
    this.t.setBiome("biome_celestial");
    this.t.setDrawLayer(TileZIndexes.celestial_high);
    this.t.fire_chance = 0.03f;
    this.t.burn_rate = 2;
    this.t.food_resource = "herbs";
    this.t.biome_tags = AssetLibrary<TopTileType>.h<BiomeTag>(BiomeTag.Celestial);
    TopTileLibrary.singularity_low = this.clone("singularity_low", "grass_low");
    this.t.used_in_generator = false;
    this.t.color_hex = "#623079";
    this.t.setBiome("biome_singularity");
    this.t.setDrawLayer(TileZIndexes.singularity_low);
    this.t.fire_chance = 0.03f;
    this.t.burn_rate = 1;
    this.t.food_resource = "herbs";
    this.t.biome_tags = AssetLibrary<TopTileType>.h<BiomeTag>(BiomeTag.Singularity);
    this.t.burnable = false;
    this.t.step_action_chance = 0.1f;
    this.t.step_action = new TileStepAction(ActionLibrary.singularityTeleportation);
    TopTileLibrary.singularity_high = this.clone("singularity_high", "grass_high");
    this.t.used_in_generator = false;
    this.t.color_hex = "#502263";
    this.t.setBiome("biome_singularity");
    this.t.setDrawLayer(TileZIndexes.singularity_high);
    this.t.fire_chance = 0.03f;
    this.t.burn_rate = 1;
    this.t.food_resource = "herbs";
    this.t.biome_tags = AssetLibrary<TopTileType>.h<BiomeTag>(BiomeTag.Singularity);
    this.t.burnable = false;
    this.t.step_action_chance = 0.1f;
    this.t.step_action = new TileStepAction(ActionLibrary.singularityTeleportation);
    TopTileLibrary.clover_low = this.clone("clover_low", "grass_low");
    this.t.color_hex = "#49AB87";
    this.t.setBiome("biome_clover");
    this.t.setDrawLayer(TileZIndexes.clover_low);
    this.t.fire_chance = 0.03f;
    this.t.burn_rate = 4;
    this.t.food_resource = "herbs";
    this.t.biome_tags = AssetLibrary<TopTileType>.h<BiomeTag>(BiomeTag.Clover);
    TopTileLibrary.clover_high = this.clone("clover_high", "grass_high");
    this.t.color_hex = "#3E8C7B";
    this.t.setBiome("biome_clover");
    this.t.setDrawLayer(TileZIndexes.clover_high);
    this.t.fire_chance = 0.03f;
    this.t.burn_rate = 4;
    this.t.food_resource = "herbs";
    this.t.biome_tags = AssetLibrary<TopTileType>.h<BiomeTag>(BiomeTag.Clover);
    TopTileLibrary.paradox_low = this.clone("paradox_low", "grass_low");
    this.t.used_in_generator = false;
    this.t.color_hex = "#896955";
    this.t.setBiome("biome_paradox");
    this.t.setDrawLayer(TileZIndexes.paradox_low);
    this.t.fire_chance = 0.03f;
    this.t.burn_rate = 2;
    this.t.food_resource = "herbs";
    this.t.biome_tags = AssetLibrary<TopTileType>.h<BiomeTag>(BiomeTag.Paradox);
    this.t.step_action = new TileStepAction(ActionLibrary.timeParadox);
    this.t.step_action_chance = 0.1f;
    TopTileLibrary.paradox_high = this.clone("paradox_high", "grass_high");
    this.t.used_in_generator = false;
    this.t.color_hex = "#745844";
    this.t.setBiome("biome_paradox");
    this.t.setDrawLayer(TileZIndexes.paradox_high);
    this.t.fire_chance = 0.03f;
    this.t.burn_rate = 2;
    this.t.food_resource = "herbs";
    this.t.biome_tags = AssetLibrary<TopTileType>.h<BiomeTag>(BiomeTag.Paradox);
    this.t.step_action = new TileStepAction(ActionLibrary.timeParadox);
    this.t.step_action_chance = 0.1f;
    TopTileLibrary.corruption_low = this.clone("corrupted_low", "grass_low");
    this.t.color_hex = "#6F556C";
    this.t.setBiome("biome_corrupted");
    this.t.setDrawLayer(TileZIndexes.corruption_low);
    this.t.unit_death_action = new WorldAction(ActionLibrary.spawnGhost);
    this.t.step_action = new TileStepAction(ActionLibrary.giveCursed);
    this.t.step_action_chance = 0.05f;
    this.t.fire_chance = 0.02f;
    this.t.burn_rate = 1;
    this.t.food_resource = "evil_beets";
    this.t.biome_tags = AssetLibrary<TopTileType>.h<BiomeTag>(BiomeTag.Corrupted);
    this.t.only_allowed_to_build_with_tag = "can_build_in_biome_corruption";
    TopTileLibrary.corruption_high = this.clone("corrupted_high", "grass_high");
    this.t.color_hex = "#533F51";
    this.t.setBiome("biome_corrupted");
    this.t.setDrawLayer(TileZIndexes.corruption_high);
    this.t.unit_death_action = new WorldAction(ActionLibrary.spawnGhost);
    this.t.step_action = new TileStepAction(ActionLibrary.giveCursed);
    this.t.step_action_chance = 0.05f;
    this.t.fire_chance = 0.02f;
    this.t.burn_rate = 1;
    this.t.food_resource = "evil_beets";
    this.t.biome_tags = AssetLibrary<TopTileType>.h<BiomeTag>(BiomeTag.Corrupted);
    this.t.only_allowed_to_build_with_tag = "can_build_in_biome_corruption";
    TopTileLibrary.infernal_low = this.clone("infernal_low", "grass_low");
    this.t.can_be_set_on_fire_by_burning_feet = false;
    this.t.color_hex = "#9C3626";
    this.t.setBiome("biome_infernal");
    this.t.burnable = false;
    this.t.setDrawLayer(TileZIndexes.infernal_low);
    this.t.food_resource = "peppers";
    this.t.hold_lava = true;
    this.t.can_be_frozen = false;
    this.t.biome_tags = AssetLibrary<TopTileType>.h<BiomeTag>(BiomeTag.Infernal);
    this.t.only_allowed_to_build_with_tag = "can_build_in_biome_infernal";
    TopTileLibrary.infernal_high = this.clone("infernal_high", "grass_high");
    this.t.can_be_set_on_fire_by_burning_feet = false;
    this.t.color_hex = "#68372D";
    this.t.setBiome("biome_infernal");
    this.t.burnable = false;
    this.t.setDrawLayer(TileZIndexes.infernal_high);
    this.t.food_resource = "peppers";
    this.t.hold_lava = true;
    this.t.can_be_frozen = false;
    this.t.biome_tags = AssetLibrary<TopTileType>.h<BiomeTag>(BiomeTag.Infernal);
    this.t.only_allowed_to_build_with_tag = "can_build_in_biome_infernal";
    TopTileLibrary.jungle_low = this.clone("jungle_low", "grass_low");
    this.t.color_hex = "#46A052";
    this.t.setBiome("biome_jungle");
    this.t.setDrawLayer(TileZIndexes.jungle_low);
    this.t.fire_chance = 0.04f;
    this.t.burn_rate = 5;
    this.t.food_resource = "bananas";
    this.t.biome_tags = AssetLibrary<TopTileType>.h<BiomeTag>(BiomeTag.Jungle);
    TopTileLibrary.jungle_high = this.clone("jungle_high", "grass_high");
    this.t.color_hex = "#1F7020";
    this.t.setBiome("biome_jungle");
    this.t.setDrawLayer(TileZIndexes.jungle_high);
    this.t.fire_chance = 0.05f;
    this.t.burn_rate = 5;
    this.t.food_resource = "bananas";
    this.t.biome_tags = AssetLibrary<TopTileType>.h<BiomeTag>(BiomeTag.Jungle);
    TopTileLibrary.swamp_low = this.clone("swamp_low", "grass_low");
    this.t.color_hex = "#4D483E";
    this.t.setBiome("biome_swamp");
    this.t.setDrawLayer(TileZIndexes.swamp_low);
    this.t.walk_multiplier = 0.6f;
    this.t.food_resource = "herbs";
    this.t.burnable = false;
    this.t.biome_tags = AssetLibrary<TopTileType>.h<BiomeTag>(BiomeTag.Swamp);
    this.t.ignore_walk_multiplier_if_tag = "walk_adaptation_swamp";
    this.t.only_allowed_to_build_with_tag = "can_build_in_biome_swamp";
    TopTileLibrary.swamp_high = this.clone("swamp_high", "grass_high");
    this.t.color_hex = "#453E34";
    this.t.setBiome("biome_swamp");
    this.t.setDrawLayer(TileZIndexes.swamp_high);
    this.t.walk_multiplier = 0.6f;
    this.t.food_resource = "herbs";
    this.t.burnable = false;
    this.t.biome_tags = AssetLibrary<TopTileType>.h<BiomeTag>(BiomeTag.Swamp);
    this.t.ignore_walk_multiplier_if_tag = "walk_adaptation_swamp";
    this.t.only_allowed_to_build_with_tag = "can_build_in_biome_swamp";
    TopTileLibrary.wasteland_low = this.clone("wasteland_low", "grass_low");
    this.t.color_hex = "#849371";
    this.t.setBiome("biome_wasteland");
    this.t.grass = false;
    this.t.wasteland = true;
    this.t.burnable = false;
    this.t.can_be_biome = true;
    this.t.setDrawLayer(TileZIndexes.wasteland_low);
    this.t.food_resource = "herbs";
    this.t.biome_tags = AssetLibrary<TopTileType>.h<BiomeTag>(BiomeTag.Wasteland);
    this.t.only_allowed_to_build_with_tag = "can_build_in_biome_wasteland";
    TopTileLibrary.wasteland_high = this.clone("wasteland_high", "grass_high");
    this.t.color_hex = "#6C7759";
    this.t.setBiome("biome_wasteland");
    this.t.grass = false;
    this.t.wasteland = true;
    this.t.burnable = false;
    this.t.can_be_biome = true;
    this.t.setDrawLayer(TileZIndexes.wasteland_high);
    this.t.food_resource = "herbs";
    this.t.biome_tags = AssetLibrary<TopTileType>.h<BiomeTag>(BiomeTag.Wasteland);
    this.t.only_allowed_to_build_with_tag = "can_build_in_biome_wasteland";
    TopTileLibrary.desert_low = this.clone("desert_low", "grass_low");
    this.t.color_hex = "#E8C76E";
    this.t.setBiome("biome_desert");
    this.t.grass = false;
    this.t.burnable = false;
    this.t.setDrawLayer(TileZIndexes.desert_low);
    this.t.walk_multiplier = 0.7f;
    this.t.food_resource = "desert_berries";
    this.t.biome_tags = AssetLibrary<TopTileType>.h<BiomeTag>(BiomeTag.Desert);
    this.t.ignore_walk_multiplier_if_tag = "walk_adaptation_sand";
    this.t.only_allowed_to_build_with_tag = "can_build_in_biome_desert";
    this.t.step_action = new TileStepAction(ActionLibrary.restoreMana);
    TopTileLibrary.desert_high = this.clone("desert_high", "grass_high");
    this.t.color_hex = "#E1BA5A";
    this.t.setBiome("biome_desert");
    this.t.grass = false;
    this.t.burnable = false;
    this.t.setDrawLayer(TileZIndexes.desert_high);
    this.t.walk_multiplier = 0.7f;
    this.t.food_resource = "desert_berries";
    this.t.biome_tags = AssetLibrary<TopTileType>.h<BiomeTag>(BiomeTag.Desert);
    this.t.ignore_walk_multiplier_if_tag = "walk_adaptation_sand";
    this.t.only_allowed_to_build_with_tag = "can_build_in_biome_desert";
    this.t.step_action = new TileStepAction(ActionLibrary.restoreMana);
    TopTileLibrary.crystal_low = this.clone("crystal_low", "grass_low");
    this.t.color_hex = "#68EADE";
    this.t.setBiome("biome_crystal");
    this.t.grass = false;
    this.t.burnable = false;
    this.t.setDrawLayer(TileZIndexes.crystal_low);
    this.t.food_resource = "crystal_salt";
    this.t.biome_tags = AssetLibrary<TopTileType>.h<BiomeTag>(BiomeTag.Crystal);
    TopTileLibrary.crystal_high = this.clone("crystal_high", "grass_high");
    this.t.color_hex = "#5FD6CB";
    this.t.setBiome("biome_crystal");
    this.t.grass = false;
    this.t.burnable = false;
    this.t.setDrawLayer(TileZIndexes.crystal_high);
    this.t.food_resource = "crystal_salt";
    this.t.biome_tags = AssetLibrary<TopTileType>.h<BiomeTag>(BiomeTag.Crystal);
    TopTileLibrary.candy_low = this.clone("candy_low", "grass_low");
    this.t.color_hex = "#FF96B0";
    this.t.setBiome("biome_candy");
    this.t.setDrawLayer(TileZIndexes.candy_low);
    this.t.food_resource = "candy";
    this.t.biome_tags = AssetLibrary<TopTileType>.h<BiomeTag>(BiomeTag.Candy);
    this.t.burn_rate = 4;
    TopTileLibrary.candy_high = this.clone("candy_high", "grass_high");
    this.t.color_hex = "#FB87A4";
    this.t.setBiome("biome_candy");
    this.t.setDrawLayer(TileZIndexes.candy_high);
    this.t.food_resource = "candy";
    this.t.biome_tags = AssetLibrary<TopTileType>.h<BiomeTag>(BiomeTag.Candy);
    this.t.burn_rate = 4;
    TopTileLibrary.lemon_low = this.clone("lemon_low", "grass_low");
    this.t.color_hex = "#D1E771";
    this.t.setBiome("biome_lemon");
    this.t.setDrawLayer(TileZIndexes.lemon_low);
    this.t.food_resource = "lemons";
    this.t.biome_tags = AssetLibrary<TopTileType>.h<BiomeTag>(BiomeTag.Lemon, BiomeTag.Green);
    this.t.burn_rate = 2;
    this.t.step_action = new TileStepAction(ActionLibrary.restoreStamina);
    TopTileLibrary.lemon_high = this.clone("lemon_high", "grass_high");
    this.t.color_hex = "#8ACF55";
    this.t.setBiome("biome_lemon");
    this.t.setDrawLayer(TileZIndexes.lemon_high);
    this.t.food_resource = "lemons";
    this.t.biome_tags = AssetLibrary<TopTileType>.h<BiomeTag>(BiomeTag.Lemon, BiomeTag.Green);
    this.t.burn_rate = 2;
    this.t.step_action = new TileStepAction(ActionLibrary.restoreStamina);
    TopTileType pAsset3 = new TopTileType();
    pAsset3.cost = 10;
    pAsset3.drawPixel = true;
    pAsset3.id = "water_bomb";
    pAsset3.color_hex = "#6D00CD";
    pAsset3.burnable = false;
    pAsset3.explodable = true;
    pAsset3.explodable_delayed = true;
    pAsset3.explode_range = 9;
    pAsset3.explodable_by_ocean = true;
    pAsset3.ignore_ocean_edge_rendering = true;
    pAsset3.ground = true;
    pAsset3.can_be_filled_with_ocean = true;
    pAsset3.strength = 0;
    pAsset3.can_build_on = true;
    TopTileLibrary.water_bomb = this.add(pAsset3);
    this.t.can_be_frozen = false;
    this.t.setDrawLayer(TileZIndexes.water_bomb);
    this.t.can_be_removed_with_demolish = true;
    TopTileType pAsset4 = new TopTileType();
    pAsset4.drawPixel = true;
    pAsset4.id = "tumor_low";
    pAsset4.creep = true;
    pAsset4.color_hex = "#EE5183";
    pAsset4.height_min = 108;
    pAsset4.ground = true;
    pAsset4.walk_multiplier = 0.8f;
    pAsset4.burnable = true;
    pAsset4.life = true;
    pAsset4.fire_chance = 1f;
    pAsset4.strength = 0;
    pAsset4.can_build_on = false;
    pAsset4.remove_on_freeze = true;
    TopTileLibrary.tumor_low = this.add(pAsset4);
    this.t.can_be_frozen = false;
    this.t.step_action = new TileStepAction(TileActionLibrary.giveTumorTrait);
    this.t.setDrawLayer(TileZIndexes.tumor_low);
    this.t.setBiome("biome_tumor");
    TopTileLibrary.tumor_high = this.clone("tumor_high", "tumor_low");
    this.t.can_be_frozen = false;
    this.t.color_hex = "#FE1864";
    this.t.setDrawLayer(TileZIndexes.tumor_high);
    this.t.setBiome("biome_tumor");
    TopTileLibrary.biomass_low = this.clone("biomass_low", "tumor_low");
    this.t.can_be_frozen = false;
    this.t.color_hex = "#45C842";
    this.t.step_action = new TileStepAction(TileActionLibrary.giveSlownessStatus);
    TopTileType t1 = this.t;
    t1.step_action = t1.step_action + new TileStepAction(TileActionLibrary.giveMadnessTrait);
    this.t.setDrawLayer(TileZIndexes.biomass_low);
    this.t.setBiome("biome_biomass");
    this.t.fire_chance = 0.06f;
    TopTileLibrary.biomass_high = this.clone("biomass_high", "tumor_high");
    this.t.can_be_frozen = false;
    this.t.color_hex = "#41A840";
    this.t.step_action = new TileStepAction(TileActionLibrary.giveSlownessStatus);
    TopTileType t2 = this.t;
    t2.step_action = t2.step_action + new TileStepAction(TileActionLibrary.giveMadnessTrait);
    this.t.setDrawLayer(TileZIndexes.biomass_high);
    this.t.setBiome("biome_biomass");
    this.t.fire_chance = 0.06f;
    TopTileLibrary.pumpkin_low = this.clone("pumpkin_low", "tumor_low");
    this.t.can_be_frozen = false;
    this.t.color_hex = "#8F9339";
    this.t.step_action = new TileStepAction(TileActionLibrary.giveSlownessStatus);
    this.t.step_action_chance = 0.2f;
    this.t.setDrawLayer(TileZIndexes.pumpkin_low);
    this.t.setBiome("biome_pumpkin");
    this.t.fire_chance = 0.06f;
    TopTileLibrary.pumpkin_high = this.clone("pumpkin_high", "tumor_high");
    this.t.can_be_frozen = false;
    this.t.color_hex = "#696C02";
    this.t.step_action = new TileStepAction(TileActionLibrary.giveSlownessStatus);
    this.t.step_action_chance = 0.2f;
    this.t.setDrawLayer(TileZIndexes.pumpkin_high);
    this.t.setBiome("biome_pumpkin");
    this.t.fire_chance = 0.06f;
    TopTileLibrary.cybertile_low = this.clone("cybertile_low", "tumor_low");
    this.t.can_be_frozen = false;
    this.t.life = false;
    this.t.color_hex = "#9EA6A3";
    this.t.setDrawLayer(TileZIndexes.cybertile_low);
    this.t.setBiome("biome_cybertile");
    this.t.burnable = false;
    this.t.can_be_removed_with_demolish = true;
    this.t.step_action = (TileStepAction) null;
    TopTileLibrary.cybertile_high = this.clone("cybertile_high", "tumor_high");
    this.t.can_be_frozen = false;
    this.t.life = false;
    this.t.color_hex = "#858886";
    this.t.setDrawLayer(TileZIndexes.cybertile_high);
    this.t.setBiome("biome_cybertile");
    this.t.burnable = false;
    this.t.can_be_removed_with_demolish = true;
    this.t.step_action = (TileStepAction) null;
    TopTileType pAsset5 = new TopTileType();
    pAsset5.cost = 116;
    pAsset5.drawPixel = true;
    pAsset5.id = "road";
    pAsset5.color_hex = "#C1997C";
    pAsset5.road = true;
    pAsset5.ground = true;
    pAsset5.walk_multiplier = 1.5f;
    pAsset5.can_be_set_on_fire = true;
    pAsset5.can_build_on = true;
    pAsset5.can_be_frozen = false;
    pAsset5.strength = 0;
    pAsset5.check_edge = false;
    TopTileLibrary.road = this.add(pAsset5);
    this.t.setDrawLayer(TileZIndexes.road);
    this.t.can_be_removed_with_demolish = true;
    TopTileType pAsset6 = new TopTileType();
    pAsset6.cost = 10;
    pAsset6.drawPixel = true;
    pAsset6.id = "fuse";
    pAsset6.color_hex = "#834C4C";
    pAsset6.burnable = true;
    pAsset6.burn_rate = 4;
    pAsset6.terraform_after_fire = true;
    pAsset6.ground = true;
    pAsset6.can_build_on = true;
    pAsset6.check_edge = false;
    pAsset6.strength = 0;
    TopTileLibrary.fuse = this.add(pAsset6);
    this.t.can_be_frozen = false;
    this.t.setDrawLayer(TileZIndexes.fuse);
    this.t.can_be_removed_with_demolish = true;
    TopTileType pAsset7 = new TopTileType();
    pAsset7.cost = 115;
    pAsset7.drawPixel = true;
    pAsset7.id = "field";
    pAsset7.color_hex = "#A8663A";
    pAsset7.height_min = 108;
    pAsset7.ground = true;
    pAsset7.farm_field = true;
    pAsset7.can_be_frozen = false;
    pAsset7.can_be_removed_with_demolish = true;
    pAsset7.can_be_removed_with_spade = true;
    pAsset7.can_build_on = false;
    pAsset7.can_be_set_on_fire = true;
    pAsset7.burnable = true;
    pAsset7.burn_rate = 4;
    pAsset7.strength = 0;
    pAsset7.fire_chance = 0.4f;
    pAsset7.remove_on_freeze = true;
    pAsset7.check_edge = false;
    pAsset7.remove_on_heat = true;
    TopTileLibrary.field = this.add(pAsset7);
    this.t.setDrawLayer(TileZIndexes.field);
    this.t.biome_tags = AssetLibrary<TopTileType>.h<BiomeTag>(BiomeTag.Field);
    TopTileType pAsset8 = new TopTileType();
    pAsset8.cost = 10;
    pAsset8.drawPixel = true;
    pAsset8.id = "tnt";
    pAsset8.color_hex = "#A30000";
    pAsset8.burnable = true;
    pAsset8.explodable = true;
    pAsset8.explodable_delayed = true;
    pAsset8.explode_range = 10;
    pAsset8.ground = true;
    pAsset8.can_build_on = true;
    pAsset8.strength = 0;
    pAsset8.can_errode_to_sand = false;
    TopTileLibrary.tnt = this.add(pAsset8);
    this.t.can_be_frozen = false;
    this.t.setDrawLayer(TileZIndexes.tnt);
    this.t.can_be_removed_with_demolish = true;
    TopTileType pAsset9 = new TopTileType();
    pAsset9.cost = 10;
    pAsset9.drawPixel = true;
    pAsset9.id = "fireworks";
    pAsset9.color_hex = "#B43DCC";
    pAsset9.burnable = true;
    pAsset9.burn_rate = 5;
    pAsset9.terraform_after_fire = true;
    pAsset9.ground = true;
    pAsset9.can_build_on = true;
    pAsset9.strength = 0;
    pAsset9.can_errode_to_sand = false;
    TopTileLibrary.fireworks = this.add(pAsset9);
    this.t.can_be_frozen = false;
    this.t.setDrawLayer(TileZIndexes.fireworks);
    this.t.can_be_removed_with_demolish = true;
    TopTileType pAsset10 = new TopTileType();
    pAsset10.cost = 10;
    pAsset10.drawPixel = true;
    pAsset10.id = "tnt_timed";
    pAsset10.color_hex = "#7F0000";
    pAsset10.burnable = true;
    pAsset10.explodable = true;
    pAsset10.explodable_timed = true;
    pAsset10.explodeTimer = 5;
    pAsset10.explode_range = 8;
    pAsset10.ground = true;
    pAsset10.can_build_on = true;
    pAsset10.strength = 0;
    pAsset10.can_errode_to_sand = false;
    TopTileLibrary.tnt_timed = this.add(pAsset10);
    this.t.can_be_frozen = false;
    this.t.setDrawLayer(TileZIndexes.tnt_timed);
    this.t.can_be_removed_with_demolish = true;
    TopTileType pAsset11 = new TopTileType();
    pAsset11.cost = 10;
    pAsset11.drawPixel = true;
    pAsset11.id = "landmine";
    pAsset11.color_hex = "#990000";
    pAsset11.burnable = true;
    pAsset11.explodable = true;
    pAsset11.explode_range = 3;
    pAsset11.ground = true;
    pAsset11.strength = 0;
    pAsset11.can_errode_to_sand = false;
    TopTileLibrary.landmine = this.add(pAsset11);
    this.t.can_be_frozen = false;
    this.t.step_action = new TileStepAction(TileActionLibrary.landmine);
    this.t.step_action_chance = 0.9f;
    this.t.setDrawLayer(TileZIndexes.landmine);
    this.t.can_be_removed_with_demolish = true;
    TopTileType pAsset12 = new TopTileType();
    pAsset12.id = "frozen_low";
    pAsset12.cost = 10;
    pAsset12.drawPixel = true;
    pAsset12.color_hex = "#BAD5D3";
    pAsset12.edge_color_hex = "#F5F7F6";
    pAsset12.ground = true;
    pAsset12.strength = 0;
    pAsset12.burnable = false;
    pAsset12.can_be_removed_with_spade = true;
    pAsset12.can_be_autotested = false;
    TopTileLibrary.frozen_low = this.add(pAsset12);
    this.t.walk_multiplier = 0.8f;
    this.t.can_be_farm = true;
    this.t.can_build_on = true;
    this.t.ignore_walk_multiplier_if_tag = "walk_adaptation_snow";
    this.t.setDrawLayer(TileZIndexes.permafrost_low);
    this.setSnow();
    TopTileLibrary.frozen_high = this.clone("frozen_high", "frozen_low");
    this.t.walk_multiplier = 0.8f;
    this.t.can_build_on = true;
    this.t.color_hex = "#D3E4E3";
    this.t.edge_color_hex = "#F5F7F6";
    this.t.can_be_autotested = false;
    this.t.ignore_walk_multiplier_if_tag = "walk_adaptation_snow";
    this.t.setDrawLayer(TileZIndexes.permafrost_high);
    this.setSnow();
    TopTileLibrary.permafrost_low = this.clone("permafrost_low", "grass_low");
    this.t.walk_multiplier = 0.8f;
    this.t.setBiome("biome_permafrost");
    this.t.biome_tags = AssetLibrary<TopTileType>.h<BiomeTag>(BiomeTag.Permafrost);
    this.t.color_hex = "#99BCDB";
    this.t.setDrawLayer(TileZIndexes.permafrost_low);
    this.t.food_resource = string.Empty;
    this.t.can_be_frozen = false;
    this.t.forever_frozen = true;
    this.t.freeze_to_id = string.Empty;
    this.t.burnable = false;
    this.t.ignore_walk_multiplier_if_tag = "walk_adaptation_snow";
    this.t.only_allowed_to_build_with_tag = "can_build_in_biome_permafrost";
    TopTileLibrary.permafrost_high = this.clone("permafrost_high", "grass_high");
    this.t.walk_multiplier = 0.8f;
    this.t.setBiome("biome_permafrost");
    this.t.biome_tags = AssetLibrary<TopTileType>.h<BiomeTag>(BiomeTag.Permafrost);
    this.t.food_resource = "pine_cones";
    this.t.color_hex = "#B4CFE5";
    this.t.edge_color_hex = "#F5F7F6";
    this.t.forever_frozen = true;
    this.t.can_be_frozen = false;
    this.t.setDrawLayer(TileZIndexes.permafrost_high);
    this.t.freeze_to_id = string.Empty;
    this.t.burnable = false;
    this.t.ignore_walk_multiplier_if_tag = "walk_adaptation_snow";
    this.t.only_allowed_to_build_with_tag = "can_build_in_biome_permafrost";
    TopTileLibrary.snow_sand = this.clone("snow_sand", "permafrost_low");
    this.t.walk_multiplier = 0.6f;
    this.t.can_build_on = true;
    this.t.setDrawLayer(TileZIndexes.snow_sand);
    this.t.color_hex = "#AFF5F1";
    this.t.ground = true;
    this.t.can_be_autotested = false;
    this.t.ignore_walk_multiplier_if_tag = "walk_adaptation_snow";
    this.setSnow();
    TopTileLibrary.ice = this.clone("ice", "permafrost_low");
    this.t.setDrawLayer(TileZIndexes.ice);
    this.t.color_hex = "#A7D6F4";
    this.t.can_build_on = false;
    this.t.can_errode_to_sand = false;
    this.t.damaged_when_walked = true;
    this.t.layer_type = TileLayerType.Ocean;
    this.t.ground = false;
    this.t.liquid = true;
    this.t.ocean = true;
    this.t.can_be_autotested = false;
    this.setSnow();
    TopTileLibrary.snow_hills = this.clone("snow_hills", "permafrost_low");
    this.t.walk_multiplier = 0.6f;
    this.t.color_hex = "#E2EDEC";
    this.t.setDrawLayer(TileZIndexes.snow_hills);
    this.t.can_build_on = false;
    this.t.can_be_farm = false;
    this.t.can_be_autotested = false;
    this.t.ignore_walk_multiplier_if_tag = "walk_adaptation_snow";
    this.setSnow();
    TopTileLibrary.snow_block = this.clone("snow_block", "permafrost_low");
    this.t.walk_multiplier = 0.6f;
    this.t.layer_type = TileLayerType.Block;
    this.t.color_hex = "#FCFDFD";
    this.t.block = true;
    this.t.block_height = 3f;
    this.t.rocks = true;
    this.t.edge_mountains = true;
    this.t.mountains = true;
    this.t.ground = false;
    this.t.can_build_on = false;
    this.t.can_be_autotested = false;
    this.t.setDrawLayer(TileZIndexes.snow_block);
    this.t.ignore_walk_multiplier_if_tag = "walk_adaptation_snow";
    this.setSnow();
    TopTileLibrary.snow_summit = this.clone("snow_summit", "permafrost_low");
    this.t.layer_type = TileLayerType.Block;
    this.t.color_hex = "#FCFDFD";
    this.t.block = true;
    this.t.block_height = 4f;
    this.t.rocks = true;
    this.t.edge_mountains = true;
    this.t.mountains = true;
    this.t.summit = true;
    this.t.ground = false;
    this.t.can_build_on = false;
    this.t.can_be_autotested = false;
    this.t.setDrawLayer(TileZIndexes.snow_summit);
    this.setSnow();
    this.addWalls();
    this.loadTileSprites();
  }

  private void addWalls()
  {
    TopTileType pAsset = new TopTileType();
    pAsset.id = "$wall$";
    pAsset.layer_type = TileLayerType.Block;
    pAsset.cost = 10;
    pAsset.drawPixel = true;
    pAsset.color_hex = "#ffffff";
    pAsset.edge_color_hex = "#5A1C32";
    pAsset.wall = true;
    pAsset.block = true;
    pAsset.block_height = 6f;
    pAsset.can_be_set_on_fire = false;
    pAsset.strength = 0;
    pAsset.burnable = false;
    pAsset.can_be_removed_with_demolish = true;
    pAsset.allowed_to_be_finger_copied = false;
    pAsset.can_be_frozen = false;
    this.add(pAsset);
    TopTileLibrary.wall_evil = this.clone("wall_evil", "$wall$");
    this.t.strength = 3;
    this.t.color_hex = "#9B3C4D";
    this.t.setDrawLayer(TileZIndexes.wall_evil);
    this.t.life = true;
    TopTileLibrary.wall_order = this.clone("wall_order", "$wall$");
    this.t.strength = 3;
    this.t.setDrawLayer(TileZIndexes.wall_order);
    this.t.color_hex = "#A1B1A2";
    this.t.edge_color_hex = "#787F87";
    this.t.can_be_removed_with_pickaxe = true;
    TopTileLibrary.wall_ancient = this.clone("wall_ancient", "$wall$");
    this.t.strength = 4;
    this.t.setDrawLayer(TileZIndexes.wall_ancient);
    this.t.color_hex = "#425B78";
    this.t.edge_color_hex = "#3A485E";
    TopTileLibrary.wall_wild = this.clone("wall_wild", "$wall$");
    this.t.strength = 1;
    this.t.setDrawLayer(TileZIndexes.wall_wild);
    this.t.color_hex = "#C67D49";
    this.t.edge_color_hex = "#4B2E1B";
    this.t.can_be_removed_with_axe = true;
    this.t.burnable = true;
    this.t.burn_rate = 5;
    TopTileLibrary.wall_iron = this.clone("wall_iron", "$wall$");
    this.t.strength = 2;
    this.t.setDrawLayer(TileZIndexes.wall_iron);
    this.t.color_hex = "#597D94";
    this.t.edge_color_hex = "#2E363E";
    TopTileLibrary.wall_green = this.clone("wall_green", "$wall$");
    this.t.strength = 1;
    this.t.setDrawLayer(TileZIndexes.wall_green);
    this.t.color_hex = "#65A13F";
    this.t.edge_color_hex = "#3F6B3F";
    this.t.can_be_set_on_fire = true;
    this.t.burnable = true;
    this.t.burn_rate = 5;
    this.t.can_be_removed_with_axe = true;
    this.t.can_be_removed_with_sickle = true;
    TopTileLibrary.wall_light = this.clone("wall_light", "$wall$");
    this.t.strength = 10;
    this.t.setDrawLayer(TileZIndexes.wall_light);
    this.t.color_hex = "#FFF349";
    this.t.edge_color_hex = "#E7DC42";
    this.t.animated_wall = true;
    this.t.block_height = 20f;
  }

  private void setSnow()
  {
    this.t.can_be_biome = false;
    this.t.setBiome((string) null);
    this.t.forever_frozen = false;
    this.t.can_be_frozen = false;
    this.t.can_be_unfrozen = true;
  }

  public override void linkAssets()
  {
    base.linkAssets();
    foreach (TileTypeBase tileTypeBase in this.list)
    {
      if (!string.IsNullOrEmpty(tileTypeBase.biome_id))
        tileTypeBase.biome_asset = AssetManager.biome_library.get(tileTypeBase.biome_id);
    }
  }

  public override TopTileType add(TopTileType pAsset)
  {
    if (!pAsset.isTemplateAsset())
    {
      pAsset.index_id = TileTypeBase.last_index_id++;
      TileLibrary.array_tiles[pAsset.index_id] = (TileTypeBase) pAsset;
    }
    return base.add(pAsset);
  }

  private void loadTileSprites()
  {
    foreach (TopTileType pType in this.list)
      this.loadSpritesForTile(pType);
  }

  private void loadSpritesForTile(TopTileType pType)
  {
    Sprite[] spriteList = SpriteTextureLoader.getSpriteList("tiles/" + pType.id);
    if (spriteList == null || spriteList.Length == 0)
      return;
    pType.sprites = new TileSprites();
    foreach (Sprite pSprite in spriteList)
      pType.sprites.addVariation(pSprite, pType.id);
  }
}
